{"version":3,"file":"preload.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,W,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,MCtBA,MAAM,cAAEQ,EAAa,YAAEC,GAAgB,EAAQ,KAE/CD,EAAcE,kBAAkB,cAAe,CAC7CC,SAAU,IAAMF,EAAYG,OAAO,mBAEnCC,aAAc,IAAMJ,EAAYG,OAAO,mBAEvCE,QAAUC,GAASN,EAAYG,OAAO,aAAcG,I","sources":["webpack://middle-aware/external node-commonjs \"electron\"","webpack://middle-aware/webpack/bootstrap","webpack://middle-aware/./src/preload.ts"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const { contextBridge, ipcRenderer } = require('electron')\n\ncontextBridge.exposeInMainWorld('electronAPI', {\n  openFile: () => ipcRenderer.invoke('dialog:openFile'),\n  // parseFiles: (dir) => ipcRenderer.invoke('parseFiles', dir),\n  getAllRoutes: () => ipcRenderer.invoke('db:getAllRoutes'),\n  // getRoute: (route) => ipcRenderer.invoke('db:getRoute', route),\n  getTest: (test) => ipcRenderer.invoke('db:getTest', test)\n})\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","contextBridge","ipcRenderer","exposeInMainWorld","openFile","invoke","getAllRoutes","getTest","test"],"sourceRoot":""}